propertychangelistener can be restricted to one particular property - see moduleFactory

everyModuleLogic should implement process, doInBackground and done methods, they should be referencing communication api to core, during process, DTO should be sent.

zdokumentovat guidelines pro psani modulu, sirky, definice volani logiky, registrace listeneru apod.

---------

RE -> NFA generuje strasne malo ruznorode priklady
+ strasne dlouho trva generovani pri dlouhem regexpu 8-10 -- co presne urcuje tu delku?? + nekdy i cykli

--------

fillTrick - weighty 0 pro vsechny anchor north, weight 1 anchor south pro fiktivni jpane

----------
spinners
cervene zabarvovani kdyz zaporne - sparovat a validovat spinner values
zlute zabarveni (not used) kdyz 0

-=
	private SpinnersSupport spinnersSup;
	private ColorController colorContr;
	private CriteriaConstraintsChecker criteriaChecker;
refactor to common package

------------
projit vsechna todo
---------------

lokalizace - projet anglicky spellchecker v properties souborech kvuli spatnym eng slovum

-----------
reg cz localization - pozor na sirky
------
na spinnery nastavit popupy

--------

messages label nejak vytahnout skrze module template ven a brat si ho z main gui

--------------------------
-- od tohoto upustit - pomale
multithread generovani: rozpocitat n prikladu mezi m threadu a kazdemu threadu dat nejakou sadu m/n prikladu -> odpadne rezie s vytvarenim threadu pro kazdy priklad (ale pozor na staticke veci)

prepsat nejak pro prime aktualizovani textareai, treba pres append
--------------------

cfg plain
plain.result.printout - dela jednu odrazku navic!

CFG generator - poresit tu grafiku + schovavani a objevovani panelu!

-------------------

detailed info - mozna nechat, ale zobrazit jen pro cfg

--------

save profile - podle aktivniho modulu ulozi vsechny spinnery
load profile - nacte vybrany modul
--------------

automaton - travi STRASNE casu v toStringu - viz profiler

----------------
slowness pri prvnim behu - behem alokace pameti (pro stringy hlavne...)

T0 predelany na thread distribution hned na zacatku - jeste pred zavolanim (v ramci regModule.generate) - poupravit podle toho javadoc a veskere diagramy!

Pro pocet jader > 2 - there should be double implementation provided - one with consumer/producer for more cores
for less cores, there is not used consumerqueue (to save thread) (check and if should be added) and methods are using moduleToCore communication
poupravit core (exampleconsumer creation) a jednotlive generatory + regmodule

pro rychlejsi output je dobre mit zvoleny pouze vystup v jazyce ktery chci 
--------------
v reglang generatoru (napr Automaton) je mnohokrat pouzity string.replace -> zkusit udelat efektivnejsi a dat do textu
reseni StringUtils z org.apache.commons.lang ? 
Uvidime, pripadny point pro optimalizaci - az pozdeji - at neni zbytecna premature optimalization
Prozatim by to chtelo se vyhnout replacu nejak inteligentne - alespon castecne - urcite do textu
---------------
automat - nezobrazuje se petice ve vystupu v IS a latex
---------

big todo: pokud bude cas, dodat podobne slozitosti aplikovanych algoritmu i do reg generatoru?
TODO: generator for nondeterministic syntactic analysis?

------

pro CYK: Moznost zadat gramatiku i v jinem nez CNF formatu, v takovem pripade by bylo potreba prevest jeste do CNF predtim (dat to jako zaskrtavaci moznost, aby se ulehcila prace generatoru se zjistovanim gramatiky?)
gramatiky oddelovat "---" na zacatku radku
netreba zadavat celou ctverici, to by se dopocitalo a doplnilo ze zadanych pravidel, pouze format
A->BB|CC|a ... (mezery trimovat? at to neomezuje uzivatele

slova na vstup - oddelena bud radkem a/nebo carkou
--------
sepsat jak se pouziva spinnersupport a spinnery celkove
----------
modularita - nejake konfiguracni xmlko? nemusel by potom byt enum
konfigurace modulu - pres anotace? nebo pres XMLka? Nebo proste jen rozsirovat enum? -> po konzultaci enum -> do textu prace
----------

pridat napovedove otaznikicony k difficulty of algorithm

-----------
-----------
CYK -> dodat i uplne random generovani
 - OD TOHODO USTOUPENO: CYK: pri volbe nastaveni vyplnenosti/ruznosti mnozin v CYK tabulce postupovat odzadu -> vygenerovat tabulku, z ni odvodit gramatiku a pripadne slovo
--------

soustredit se na otestovani prikladu pro jednokrokove transformace - ty se delaji nejcasteji a zavisi nejvic na nich
---------------------

pridat do CYK bindy mezi hodnotama
word length - differentsets, emptysets
nonterminals count - different sets


v DFA -> RE NEJAK! vznikaly prazdne mnoziny v regularnim vyrazu, ten algoritmus je nema jak vytvorit!
-----
do generatoru automatu a generatoru gramatik pridat validaci pro unused alphabet/state/nonterm
===========
Z Reg modulu pro regex odebrany vystupní parametry -  jsou primo ? urcene vstupními parametry! TODO overit
------

generator pro automaty i gramatiky se snazi udelat co nejmene blackhole a pouzit vsechny znaky abecedy i vsechny stavy/neterminaly

---------------

TODO!! CYK - poladit jeste generovani gramatiky aby pouzivala skutecne vsechny neterminaly a terminaly
