Alphabet = Alphabet
States = States
Transitions = Number of transitions
Minimal = Minimum
Maximal = Maximum
Length = Length
FinalStates = Final states
EpsilonRule = Epsilon rule
UnreachableStates = Unreachable states
FirstStateNotInitial = First state is not initial
TotalTransitionFunction = Total transition function
Steps = Steps
WriteOut = Write out
REGNFATransformation = Regular grammar -> Nondeterministic finite automaton
NFAREGTransformation = Nondeterministic finite automaton -> Regular grammar
Terminals = Terminals
NonTerminals = Non-terminals
Rules = Rules
DFARETransformation = Deterministic finite automaton -> Regular expression
REDFATransformation = Regular expression -> Deterministic finite automaton
MinOneFinalState = At least 1 final state
InputAutomatonType = Input automaton type:
OutputAutomatonType = Output automaton type:
TransformationType = Transformation type
Operation = Operation
Automaton = Automaton
OutputAutomaton = Output automaton
InputAutomaton = Input automaton
Minimalization = Minimalization
InputGrammar = Input grammar
OutputGrammar = Output grammar
OutputRegex = Output regular expression
InputRegex = Input regular expression
Union = Union
Intersection = Intersection
Difference = Difference
SynchParComp = Synchronous parallel composition
VariousFATransformation = Transformation between various types of finite automata
AutomataGrammarEquiv = Equivalence of regular grammars and finite automata 
RegexAutomataEquiv = Equivalence of regular expressions and finite automata
NFAeps = NFA with epsilon transitions
NFA = NFA
DFA = DFA
minimalDFA = Minimal DFA
canonicalDFA = DFA (canonical form)
######## CYK Specific
operationWordToGrammar = CYK based on input words and computation progress (grammars are derived)
operationGrammarToWord = Grammar(s) -> Words
InputGrammar = Input grammar(s)
InputWord = Input word(s)
OutputGrammars = Output grammars
OutputWords = Output words
grammarOrGrammars = Grammar(s)
#verify eng term
Derivability = Word derivability
buttonLoadWordText = Load word(s) from file
wordsLabel = Word(s)
wordLengthLabel = Word length
buttonLoadGrammarText = Load grammar(s) from file
derivableLabelText = Derivable
nonderivableLabelText = Non-derivable
enabledLabelText = Enabled
ratioLabelText = Ratio
nonTerminalsLabel = Nonterminals
rulesLabel = Rules

WordParams = Word properties
GrammarParams = Grammar properties
CYKTableParams = Solution properties

nonTerminalsText = Nonterminals
terminalsText = Terminals
lengthText = Length
emptySetsText = Empty sets
differentSetsText = Different sets

generalCYK.text = CYK based on parameters for word, grammar and computation progress

derivableWords = Words are derivable from grammar